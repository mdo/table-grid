//
// Container
//

// Holds and centers the site content

.container {
    max-width: $container-width; 
    margin-right: auto;
    margin-left: auto; 
//    display: table; // this fixes the issue of disappearing content if it is surrounded by a wrapping div with no display set
    width: 100%; // make sure the container is always at max-width
    
    &-fluid {
        @extend .container;
        max-width: none;
    }
} 

//
// Grid classes
//
@media (min-width: $mobile-breakpoint) {
    
    // Use '.row' for a row of cells
    .row {
        display: table;
        width: 100%;
        table-layout: fixed;
        text-align: left;
    
        // Use '.row-auto' instead of '.row' to use specific column widths without auto filling the entire container area. Yes- align will still work for inline-block :)
        &-auto {
            
            @extend .row;
            
            .col {
                
                &:first-child { 
                    margin-left: 0;
                }
                
                &:last-child{
                    margin-right: 0;
                }  
                 
                display: inline-block;
                vertical-align: top;
                position: relative;
            }
        }
        
        // Use 'row-padded' as a wrapper around 'row' if you want gutters
        .row-padded & {
            .col {
                border-right:$gutter-width solid transparent;
                background-clip: padding-box;
                
                &:first-child {
                    border-left: none;
                }
                
                &:last-child {
                    border-right: none;
                }
            }  
        }
    }
    
    // Add '.col' for the table cells, or columns
    .col {
        display: table-cell;
//        word-wrap: break-word;
    }
    
    //add '.padded' to cols for inner spacing
    .padded {
        padding: $gutter-width / 2; //this can actually be any arbitrary number
    }
}